"<div style='text-align: left;'>What does rest(rest([1,2,3,4])) return?</div>";"<div style='text-align: left;'>[3, 4]</div>";"<div style='text-align: left;'>The rest function removes the first element. Twice applied, it removes the first two.</div>"
"<div style='text-align: left;'>In grade partitioning, why do we need scores sorted before assigning quartiles?</div>";"<div style='text-align: left;'>To ensure correct rank-based grading</div>";"<div style='text-align: left;'>Quartile grading depends on score position.</div>"
"<div style='text-align: left;'>Which line is incorrect in this pseudocode? U = U ++ x where x is not a list.</div>";"<div style='text-align: left;'>Line with 'U = U ++ x'</div>";"<div style='text-align: left;'>You cannot concatenate a list and a non-list using ++. x should be wrapped as [x].</div>"
"<div style='text-align: left;'>In the pseudocode checking if x belongs to both A and B, what logical connector is needed?</div>";"<div style='text-align: left;'>and</div>";"<div style='text-align: left;'>To confirm membership in both, the correct logical operator is 'and'.</div>"
"<div style='text-align: left;'>What does InsertionSort([4, 2, 5]) return using SortedListInsert?</div>";"<div style='text-align: left;'>[2, 4, 5]</div>";"<div style='text-align: left;'>Each item is inserted in a way that maintains order.</div>"
"<div style='text-align: left;'>What is the time complexity of InsertionSort in worst-case?</div>";"<div style='text-align: left;'>O(n^2)</div>";"<div style='text-align: left;'>For each element, it may scan through the entire sorted list built so far.</div>"
"<div style='text-align: left;'>What will 'first(last([[2,3],[4,5],[6,7]]))' return?</div>";"<div style='text-align: left;'>6</div>";"<div style='text-align: left;'>last(...) gives [6,7]; first of that is 6.</div>"
"<div style='text-align: left;'>If a hypothesis compares two subject grades, what data structure is useful for confirming overlap?</div>";"<div style='text-align: left;'>Sets or lists with member checking</div>";"<div style='text-align: left;'>To test overlap, we can use member() logic or set intersection.</div>"
"<div style='text-align: left;'>What is the base case for a recursive function that processes a list?</div>";"<div style='text-align: left;'>An empty list</div>";"<div style='text-align: left;'>The function stops when the list has no more elements to process.</div>"
"<div style='text-align: left;'>How would you get the third element of a list L?</div>";"<div style='text-align: left;'>first(rest(rest(L)))</div>";"<div style='text-align: left;'>Applying rest twice discards the first two elements, then first gets the new head.</div>"
"<div style='text-align: left;'>What is the purpose of 'member(x, L)' function?</div>";"<div style='text-align: left;'>To check if element x is in list L</div>";"<div style='text-align: left;'>It returns true if x is found, otherwise false.</div>"
"<div style='text-align: left;'>Why is 'U = U ++ [x]' preferred over 'U = U ++ x'?</div>";"<div style='text-align: left;'>Because '++' concatenates two lists</div>";"<div style='text-align: left;'>A single element x must be converted to a list [x] before concatenation.</div>"
"<div style='text-align: left;'>In a list of lists, e.g., [[a,b],[c,d]], what does 'first(first(L))' return?</div>";"<div style='text-align: left;'>a</div>";"<div style='text-align: left;'>The first element of the main list is [a,b], and its first element is a.</div>"
"<div style='text-align: left;'>What is the logical error in 'if member(x, A) and member(x,B) then ... else if member(x,A) ...'?</div>";"<div style='text-align: left;'>The second condition is redundant</div>";"<div style='text-align: left;'>If the first 'and' condition is false because member(x,A) is false, the 'else if' is unreachable for member(x,A).</div>"
"<div style='text-align: left;'>How do you define a function to get the last element of a list recursively?</div>";"<div style='text-align: left;'>If rest(L) is empty, return first(L), else recurse on rest(L)</div>";"<div style='text-align: left;'>This pattern processes the list until the last element is found.</div>"
"<div style='text-align: left;'>What does SortedListInsert(5, [2, 4, 6]) return?</div>";"<div style='text-align: left;'>[2, 4, 5, 6]</div>";"<div style='text-align: left;'>The number 5 is inserted between 4 and 6 to maintain sorted order.</div>"
"<div style='text-align: left;'>What is a key difference between a list and a set?</div>";"<div style='text-align: left;'>Sets do not allow duplicate elements</div>";"<div style='text-align: left;'>Lists can contain the same element multiple times.</div>"
"<div style='text-align: left;'>How can you find the intersection of two lists, A and B?</div>";"<div style='text-align: left;'>Iterate through A, and for each element, check if it's a member of B</div>";"<div style='text-align: left;'>This creates a new list with elements common to both.</div>"
"<div style='text-align: left;'>What is the time complexity of checking membership in an unsorted list of size n?</div>";"<div style='text-align: left;'>O(n)</div>";"<div style='text-align: left;'>In the worst case, you have to scan the entire list.</div>"
"<div style='text-align: left;'>What is the time complexity of checking membership in a sorted list of size n using binary search?</div>";"<div style='text-align: left;'>O(log n)</div>";"<div style='text-align: left;'>Binary search halves the search space with each comparison.</div>"
"<div style='text-align: left;'>In grade partitioning, what does the 1st quartile (Q1) represent?</div>";"<div style='text-align: left;'>The score at the 25th percentile</div>";"<div style='text-align: left;'>25% of students scored at or below this value.</div>"
"<div style='text-align: left;'>How would you find the median of a sorted list of scores?</div>";"<div style='text-align: left;'>Find the middle element</div>";"<div style='text-align: left;'>If the list has an even number of elements, it's the average of the two middle elements.</div>"
"<div style='text-align: left;'>What is the primary advantage of using a hash map (or dictionary) for data lookup?</div>";"<div style='text-align: left;'>Average O(1) time complexity</div>";"<div style='text-align: left;'>Directly computes the location of the data from the key, making it very fast.</div>"
"<div style='text-align: left;'>What does 'rest(L)' do if L has only one element?</div>";"<div style='text-align: left;'>Returns an empty list</div>";"<div style='text-align: left;'>It removes the first element, leaving nothing behind.</div>"
"<div style='text-align: left;'>How do you reverse a list using first, rest, and concatenation?</div>";"<div style='text-align: left;'>Recursively reverse rest(L) and append first(L) to the end</div>";"<div style='text-align: left;'>The base case is an empty list, which is its own reverse.</div>"
"<div style='text-align: left;'>What is a potential issue with deeply nested recursive functions?</div>";"<div style='text-align: left;'>Stack overflow error</div>";"<div style='text-align: left;'>Each recursive call uses memory on the call stack, which is finite.</div>"
"<div style='text-align: left;'>What does 'union(A, B)' of two sets A and B produce?</div>";"<div style='text-align: left;'>A new set with all elements from both A and B, without duplicates</div>";"<div style='text-align: left;'>It combines the two sets.</div>"
"<div style='text-align: left;'>What is the difference between 'first' and 'last' for a list?</div>";"<div style='text-align: left;'>'first' gets the head, 'last' gets the final element</div>";"<div style='text-align: left;'>'first' is a direct operation, while 'last' often requires traversing the list.</div>"
"<div style='text-align: left;'>Why is sorting a prerequisite for efficient quartile calculation?</div>";"<div style='text-align: left;'>Quartiles are defined by rank (position)</div>";"<div style='text-align: left;'>Without sorting, the position of an element relative to others is unknown.</div>"
"<div style='text-align: left;'>What is the result of 'member(3, [1, 2, [3, 4]])'?</div>";"<div style='text-align: left;'>false</div>";"<div style='text-align: left;'>The list contains the list [3, 4], not the number 3 as a direct element.</div>"
"<div style='text-align: left;'>How can you flatten a list of lists, e.g., [[1,2],[3,4]] to [1,2,3,4]?</div>";"<div style='text-align: left;'>Concatenate the sublists</div>";"<div style='text-align: left;'>A recursive approach would be: flatten(rest(L)) concatenated with first(L).</div>"
"<div style='text-align: left;'>What is the best-case time complexity for InsertionSort?</div>";"<div style='text-align: left;'>O(n)</div>";"<div style='text-align: left;'>This occurs when the list is already sorted.</div>"
"<div style='text-align: left;'>What is tail-call optimization?</div>";"<div style='text-align: left;'>A way to avoid stack overflow in recursive functions</div>";"<div style='text-align: left;'>If the recursive call is the very last action, the current stack frame can be reused.</div>"
"<div style='text-align: left;'>How would you check if a list is a palindrome?</div>";"<div style='text-align: left;'>Compare the list with its reverse</div>";"<div style='text-align: left;'>If the list is identical to its reverse, it is a palindrome.</div>"
"<div style='text-align: left;'>What does 'difference(A, B)' of two sets produce?</div>";"<div style='text-align: left;'>Elements that are in A but not in B</div>";"<div style='text-align: left;'>It's a way of subtracting one set from another.</div>"
"<div style='text-align: left;'>Why might you choose a list over a set for storing data?</div>";"<div style='text-align: left;'>When order and duplicate values are important</div>";"<div style='text-align: left;'>Sets are inherently unordered and unique.</div>"
"<div style='text-align: left;'>What is the output of SortedListInsert(1, [])?</div>";"<div style='text-align: left;'>[1]</div>";"<div style='text-align: left;'>Inserting an element into an empty list results in a list with just that element.</div>"
"<div style='text-align: left;'>How do you get the length of a list recursively?</div>";"<div style='text-align: left;'>1 + length of rest(L)</div>";"<div style='text-align: left;'>The base case is an empty list, which has a length of 0.</div>"
"<div style='text-align: left;'>What is a higher-order function?</div>";"<div style='text-align: left;'>A function that takes another function as an argument or returns a function</div>";"<div style='text-align: left;'>'map' and 'filter' are common examples.</div>"
"<div style='text-align: left;'>How does the 'map' function work?</div>";"<div style='text-align: left;'>It applies a given function to every element of a list, returning a new list</div>";"<div style='text-align: left;'>For example, map(square, [1,2,3]) would return [1,4,9].</div>"
"<div style='text-align: left;'>How does the 'filter' function work?</div>";"<div style='text-align: left;'>It returns a new list containing only the elements that satisfy a predicate function</div>";"<div style='text-align: left;'>For example, filter(is_even, [1,2,3,4]) would return [2,4].</div>"
"<div style='text-align: left;'>What is the purpose of an accumulator in recursion?</div>";"<div style='text-align: left;'>To pass intermediate results through recursive calls</div>";"<div style='text-align: left;'>This is often used to make a function tail-recursive.</div>"
"<div style='text-align: left;'>How can you represent a matrix (2D grid) using lists?</div>";"<div style='text-align: left;'>As a list of lists</div>";"<div style='text-align: left;'>Each inner list represents a row of the matrix.</div>"
"<div style='text-align: left;'>What is the result of 'first(rest([[1,2],[3,4],[5,6]]))'?</div>";"<div style='text-align: left;'>[3,4]</div>";"<div style='text-align: left;'>rest(...) results in [[3,4],[5,6]], and the first element of that is [3,4].</div>"
"<div style='text-align: left;'>What is data abstraction?</div>";"<div style='text-align: left;'>Hiding the implementation details of a data structure</div>";"<div style='text-align: left;'>You interact with the data through functions (e.g., first, rest) without knowing how the list is stored in memory.</div>"
"<div style='text-align: left;'>What is the primary trade-off when choosing a data structure?</div>";"<div style='text-align: left;'>Time complexity vs. space complexity</div>";"<div style='text-align: left;'>Often, faster operations require more memory, and vice-versa.</div>"
"<div style='text-align: left;'>In the context of grades, what kind of data might be stored in a list of key-value pairs?</div>";"<div style='text-align: left;'>[(student_id, score), ...]</div>";"<div style='text-align: left;'>This allows associating a score with a specific student.</div>"
"<div style='text-align: left;'>If you have a list of student scores, how would you find the highest score?</div>";"<div style='text-align: left;'>Iterate through the list, keeping track of the maximum value seen so far</div>";"<div style='text-align: left;'>A recursive solution would compare the first element with the max of the rest of the list.</div>"
"<div style='text-align: left;'>What's a simple way to combine two sorted lists into one sorted list?</div>";"<div style='text-align: left;'>The merge step of a merge sort</div>";"<div style='text-align: left;'>Repeatedly compare the heads of both lists and move the smaller element to the result list.</div>"
