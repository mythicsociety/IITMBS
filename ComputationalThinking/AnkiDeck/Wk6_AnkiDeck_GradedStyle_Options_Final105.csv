Front;Back;Extra
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> When will Line 11 in Insert procedure execute?<br><ul><li>a) If X.Pages is less than all Y.Pages</li><li>b) If inserted = True inside the loop</li><li>c) If X.Pages is greater than all Y.Pages</li><li>d) If sBooks is empty</li></ul>;Correct: c);<b>Explanation:</b> Line 11 executes when X.Pages > all Y.Pages, meaning it wasn't inserted earlier.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> What does SortedListInsert(l, x) do?<br><ul><li>a) Removes x if already in l</li><li>b) Inserts x in sorted position in l</li><li>c) Mutates original list l</li><li>d) Sorts l after appending x</li></ul>;Correct: b);<b>Explanation:</b> It inserts x into the correct position to maintain sorted order.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Which are true about InsertionSort using SortedListInsert?<br><ul><li>a) It builds a sorted list one item at a time</li><li>b) It modifies the original list</li><li>c) It requires list to be pre-sorted</li><li>d) It uses a helper function</li></ul>;Correct: a), d);<b>Explanation:</b> It builds a new list using SortedListInsert without modifying the input.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> Who receives grade A in SimpleGradeAssignment?<br><ul><li>a) position > classSize / 2</li><li>b) position < classSize / 4</li><li>c) position > 3 * classSize / 4</li><li>d) position = 0</li></ul>;Correct: c);<b>Explanation:</b> Students with position > 3 * classSize / 4 get grade A.
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> What is the output of rest(init([1,2,3,4]))?<br><ul><li>a) [2, 3]</li><li>b) [2, 3, 4]</li><li>c) [1, 2]</li><li>d) [1, 2, 3]</li></ul>;Correct: a);"<b>Explanation:</b> init removes the last → [1,2,3]; rest removes the first → [2,3]."
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Who is added to Confirm in the hypothesis procedure?<br><ul><li>a) Any student in physicsBGrades</li><li>b) Students in mathsBGrades and (physicsAGrades or physicsBGrades)</li><li>c) All students not in mathsAGrades</li><li>d) Students in grade A only</li></ul>;Correct: b);<b>Explanation:</b> Confirm includes students in mathsBGrades AND in physicsAGrades or physicsBGrades.
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
<b>QX:</b> Which lines in Insert execute for every Y?<br><ul><li>a) Line 4 and 9</li><li>b) Line 6 and 11</li><li>c) Line 1 and 2</li><li>d) Line 10 and 12</li></ul>;Correct: a);"<b>Explanation:</b> Line 4 iterates Y; Line 9 appends Y to sBooks every time."
