"Front";"Back";"Extra" "What will be the values of A, B, and C after execution of the following procedure using the ""Scores"" dataset?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1 Step 2: Maintain three variables A, B, C and initialize them to 0 Step 3: If Pile 1 is empty then stop the iteration Step 4: Read the top card in Pile 1 Step 5: If Date of Birth < ""1 May"" then increment A Step 6: If Date of Birth > ""30 April"" and Date of Birth < ""1 September"" then increment B Step 7: If Date of Birth > ""31 August"" then increment C Step 8: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) A=10, B=9, C=11</li><li>b) A=9, B=10, C=11</li><li>c) A=11, B=9, C=10</li><li>d) A=10, B=11, C=9</li></ul>";"Correct: a)";"<b>Explanation:</b> The procedure counts students based on their birth date ranges. 'A' counts those born before May 1 (Jan-Apr). 'B' counts those born between May 1 and Aug 31. 'C' counts those born after Aug 31 (Sep-Dec). A manual tally from the dataset yields A=10, B=9, and C=11.<br><b>Distractor Rationale:</b><ul><li>b) Incorrectly swaps the counts for the first two periods.</li><li>c) Incorrectly assigns the count for the last period to the first.</li><li>d) Incorrectly swaps the counts for the last two periods.</li></ul>" "The following procedure is executed using the ""Shopping Bills"" dataset. What will X represent at the end of execution?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1 Step 2: Initialize variables A, B and X to 0 Step 3: If Pile 1 is empty then stop the iteration and execute step 7 Step 4: Read the top card in Pile 1 Step 5: If the Shop name is not ""SV Stores"" then add Total bill amount to A and increment B Step 6: Move the current card to another pile called Pile 2 and repeat from step 3 Step 7: Divide A by B and store the result in X</pre><ul><li>a) Total bill amount from ""SV Stores""</li><li>b) Average of total bill amount from ""SV Stores""</li><li>c) Total number of bills from shops other than ""SV Stores""</li><li>d) Average of total bill amount from all shops other than ""SV Stores""</li></ul>";"Correct: d)";"<b>Explanation:</b> The procedure iterates through all shopping bills. The filter in Step 5 specifically acts on bills where the shop is NOT ""SV Stores"". For these filtered bills, variable A accumulates the total bill amount (a sum), and variable B counts the number of such bills. Step 7 divides the total sum (A) by the total count (B), which is the definition of an average.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. The procedure filters out ""SV Stores"", and A is a sum, not a total.</li><li>b) Incorrect. The procedure explicitly ignores bills from ""SV Stores"".</li><li>c) Incorrect. B represents the count, but X is the result of A divided by B.</li></ul>" "The following pseudocode is executed using the ""Words"" dataset. What will A represent at the end of execution?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1 Step 2: Initialize variable A to 0 Step 3: If Pile 1 is empty then stop the iteration Step 4: Read the top card in Pile 1 Step 5: If the Word does not end with a full stop and Part of Speech is ""Noun"" then increment A Step 6: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) Total number of nouns</li><li>b) Total number of words</li><li>c) Number of nouns which are not at the end of a sentence</li><li>d) Number of nouns which are at the end of a sentence</li></ul>";"Correct: c)";"<b>Explanation:</b> The procedure iterates through all words. The variable A is incremented only when two conditions are met simultaneously: the word is a ""Noun"" AND it does not end with a full stop. Therefore, A is counting nouns that do not appear at the end of a sentence.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. This would be the case if the only condition was Part of Speech is ""Noun"".</li><li>b) Incorrect. This would require incrementing A for every card without any condition.</li><li>d) Incorrect. The condition is the opposite; it checks for words that do NOT end with a full stop.</li></ul>" "The following pseudocode is executed using the ""Scores"" dataset. What are the final values of A and B?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1 Step 2: Initialize variables A and B to 1000 Step 3: If Pile 1 is empty then stop the iteration Step 4: Read the top card in Pile 1 Step 5: If Mathematics marks < A then store Mathematics marks in A Step 6: If Physics marks < B then store Physics marks in B Step 7: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) A=100, B=100</li><li>b) A=45, B=42</li><li>c) A=42, B=45</li><li>d) A will be the highest Math score, B will be the highest Physics score</li></ul>";"Correct: c)";"<b>Explanation:</b> This procedure finds the minimum marks for Mathematics and Physics. Variables A and B are initialized to a very high number (1000). As the procedure iterates, A is updated only if a lower Mathematics mark is found, and B is updated only if a lower Physics mark is found. By the end, A and B will hold the lowest scores found in the dataset for each subject, which are 42 for Math and 45 for Physics.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. These are the maximum possible scores, not the minimums found.</li><li>b) Incorrect. This swaps the minimum values for the two subjects.</li><li>d) Incorrect. The condition < finds the minimum value, not the maximum.</li></ul>" "The following pseudocode is executed using the ""Words"" dataset. What will count represent at the end of execution?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1 Step 2: Initialize variables A and count to 0 Step 3: If Pile 1 is empty then stop the iteration Step 4: Read the top card in Pile 1 Step 5: If the Word is ""Monday"" and A=0 then increment A Step 6: If the Word ends with a full stop and A>0 then increment count Step 7: If the Word ends with a full stop then reinitialize A to 0 Step 8: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) Number of times the word ""Monday"" has occurred</li><li>b) Number of sentences that have the word ""Monday"" only once</li><li>c) Number of sentences that have at least one occurrence of the word ""Monday""</li><li>d) Number of sentences that do not contain the word ""Monday""</li></ul>";"Correct: c)";"<b>Explanation:</b> Variable 'A' acts as a flag within each sentence. It is set to 1 the first time ""Monday"" is seen in a sentence and is not changed on subsequent occurrences within the same sentence. 'count' is incremented at the end of a sentence only if 'A' is greater than 0 (meaning ""Monday"" was seen). 'A' is then reset to 0 for the next sentence. This logic correctly counts sentences with at least one ""Monday"".<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. 'A' is only incremented once per sentence, not for every occurrence.</li><li>b) Incorrect. The logic does not distinguish between one and multiple occurrences.</li><li>d) Incorrect. The procedure counts sentences that do contain the word.</li></ul>" "The given information represents a ""Shopping Bill"" with potential data sanity errors. Identify all rows with such mistakes. Select all that apply.<br><pre>Row no. | Item | Category | Qty | Price | Cost
Row 1   | Onions    | Vegetables/Food | 4   | 98    | 392
Row 2   | Maggi     | Vegetables/Food | 2   | 85    | 85
Row 3   | Face Wash | Toiletries      | 1   | 100   | 100
Row 4   | Dustpan   | Household       | 1.5 | 60    | 90
Row 5   | Milk      | Dairy/Food      | 2   | 50    | 100</pre><ul><li>a) Row 1</li><li>b) Row 2</li><li>c) Row 3</li><li>d) Row 4</li><li>e) Row 5</li></ul>";"Correct: b), d)";"<b>Explanation:</b> A primary data sanity check is to ensure that Quantity * Price = Cost. In Row 2, 2 * 85 should be 170, not 85. In Row 4, a Dustpan is a discrete item and should not have a fractional quantity like 1.5.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. 4 * 98 = 392. This row is arithmetically correct.</li><li>b) Correct. 2 * 85 = 170, but the cost is listed as 85.</li><li>c) Incorrect. 1 * 100 = 100. This row is arithmetically correct.</li><li>d) Correct. A dustpan is a whole item; a quantity of 1.5 is not logical for this item type.</li><li>e) Incorrect. 2 * 50 = 100. This row is arithmetically correct.</li></ul>"
"Select the most appropriate datatypes for the fields from the ""Words"" dataset.<br><pre>Field                                | Datatype
-------------------------------------|-----------
a. Sequence number of Card           | i. Integer
b. The word ""Yellow""                 | ii. Boolean
c. Letter Count                      | iii. String
d. Part of Speech                    | iv. Character
e. Is first letter of the word a vowel?</pre><ul><li>a) a-i, b-iii, c-ii, d-iii, e-ii</li><li>b) a-i, b-iii, c-i, d-iii, e-ii</li><li>c) a-i, b-ii, c-i, d-iv, e-ii</li><li>d) a-iii, b-i, c-ii, d-ii, e-iv</li></ul>";"Correct: b)";"<b>Explanation:</b> Sequence number and Letter Count are whole numbers, so they are Integers. The word ""Yellow"" and the Part of Speech are sequences of characters, making them Strings. The question 'Is first letter a vowel?' can only be answered with True or False, making it a Boolean.<br><b>Distractor Rationale:</b><ul><li>a) Incorrectly assigns Boolean to Letter Count.</li><li>c) Incorrectly assigns Boolean to the word ""Yellow"" and Character to Part of Speech.</li><li>d) Incorrectly assigns String to Sequence number and Integer to the word ""Yellow"".</li></ul>"
"Interpret the following flowchart. Let A, B, and C be three distinct integers. What will X represent at the end?<br><pre>[Flowchart Image showing comparisons between A, B, and C to find the second largest number]</pre><ul><li>a) Largest number among A, B, and C</li><li>b) Smallest number among A, B, and C</li><li>c) Second largest number among A, B, and C</li><li>d) The average of A, B, and C</li></ul>";"Correct: c)";"<b>Explanation:</b> The flowchart systematically compares the three numbers to eliminate the largest and smallest, leaving the middle value. For instance, if A > B, it then checks A against C. If C > A, then A is the middle value. If A > C, it then compares C and B to find the middle value. Tracing any path reveals that X is always assigned the second largest (or median) value.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. The logic correctly identifies and bypasses the largest number.</li><li>b) Incorrect. The logic correctly identifies and bypasses the smallest number.</li><li>d) Incorrect. No arithmetic operations for averaging (addition, division) are performed.</li></ul>"
"The following flowchart is executed using the ""Shopping Bills"" dataset. What is the final value of 'count'?<br><pre>[Flowchart showing an iteration over shopping bills, with a decision box checking: Is ShopName ""Big Bazaar"" AND Total bill amount less than 1000? If yes, increment count.]</pre><ul><li>a) 0</li><li>b) 1</li><li>c) 2</li><li>d) 3</li></ul>";"Correct: c)";"<b>Explanation:</b> The flowchart iterates through all shopping bills and increments a counter only for bills that satisfy two conditions simultaneously: the shop must be ""Big Bazaar"" and the total amount must be less than 1000. By manually checking the provided ""Shopping Bills"" dataset, we can find exactly two bills that meet both criteria.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. There are bills that match the criteria.</li><li>b) Incorrect. There is more than one matching bill.</li><li>d) Incorrect. There are only two matching bills in the dataset.</li></ul>"
"What will be the values of A, B, and C after execution of the following procedure using the ""Scores"" dataset?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: Maintain three variables A, B, C and initialize them to 0
Step 3: If Pile 1 is empty then stop the iteration
Step 4: Read the top card in Pile 1
Step 5: If Mathematics < 50 then increment A
Step 6: If Physics < 50 then increment B
Step 7: If Chemistry < 50 then increment C
Step 8: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) A=2, B=1, C=1</li><li>b) A=1, B=2, C=1</li><li>c) A=2, B=2, C=0</li><li>d) A=3, B=1, C=2</li></ul>";"Correct: a)";"<b>Explanation:</b> The procedure iterates through all student cards. Variable A counts students with Mathematics marks less than 50. Variable B counts students with Physics marks less than 50. Variable C counts students with Chemistry marks less than 50. Based on the ""Scores"" dataset, there are 2 students with Math < 50, 1 with Physics < 50, and 1 with Chemistry < 50.<br><b>Distractor Rationale:</b><ul><li>b) This incorrectly swaps the counts for Math and Physics.</li><li>c) This incorrectly assumes two students had Physics marks below 50 and none had Chemistry marks below 50.</li><li>d) These counts are incorrect based on a manual check of the dataset.</li></ul>"
"What will variable B represent after execution of the following procedure on the ""Words"" dataset?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: Maintain two variables A, B and initialize them to 0
Step 3: If Pile 1 is empty then stop the iteration
Step 4: Read the top card in Pile 1
Step 5: If PartOfSpeech is ""Verb"" then increment A
Step 6: If the word does not end with a full stop then execute Step 9
Step 7: If the word ends with a full stop and A is greater than 1 then increment B
Step 8: Reset the variable A to 0
Step 9: Move the current card to another pile called Pile 2 and repeat from Step 3</pre><ul><li>a) Total number of verbs in the dataset</li><li>b) Total number of sentences with only one verb in it</li><li>c) Total number of sentences with at least two verbs in it</li><li>d) Total number of sentences with at least one verb in it</li></ul>";"Correct: c)";"<b>Explanation:</b> Variable 'A' counts the verbs within a single sentence. It is reset to 0 at the end of each sentence (when a full stop is encountered). Variable 'B' is only incremented at the end of a sentence if the verb count 'A' for that sentence is greater than 1. Therefore, B counts the number of sentences containing two or more verbs.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. 'A' is reset for each sentence, so it doesn't represent the total verb count.</li><li>b) Incorrect. The condition is A > 1, which excludes sentences with exactly one verb.</li><li>d) Incorrect. The condition A > 1 is stricter than A >= 1.</li></ul>"
"A student hypothesizes that fewer students are born in the first half of the year (Jan-Jun) than the second half (Jul-Dec). She writes a procedure to test this. Identify the errors in the final hypothesis testing steps. Select all that apply.<br><pre>Step 1-7: ...Correctly count students born in the first half into variable A, and second half into variable B...
Step 8: If A > B then declare the hypothesis to be True
Step 9: If A <= B then declare the hypothesis to be False</pre><ul><li>a) Step 5 to increment A is incorrect</li><li>b) Step 6 to increment B is incorrect</li><li>c) Step 8 to declare the hypothesis as True is incorrect</li><li>d) Step 9 to declare the hypothesis as False is incorrect</li></ul>";"Correct: c), d)";"<b>Explanation:</b> The hypothesis is 'fewer students in the first half', which translates to A < B. The procedure's logic is inverted. In Step 8, if A > B, the hypothesis is actually False, not True. In Step 9, if A <= B, the hypothesis is actually True, not False. The counting steps (1-7) are assumed to be correct as per the problem statement.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. The problem states the counting is correct.</li><li>b) Incorrect. The problem states the counting is correct.</li><li>c) Correct. If A > B, the hypothesis (A < B) is false.</li><li>d) Correct. If A <= B, the hypothesis (A < B) is true.</li></ul>"
"What will variable X represent after execution of the following procedure on the ""Shopping Bills"" dataset?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: Maintain four variables A, B, C, X and initialize them to 0
Step 3: If Pile 1 is empty then stop the iteration and start from Step 9
Step 4: Read the top card in Pile 1
Step 5: If the Shop name is ""SV Stores"" and Customer name is ""Suresh"" then set A equal to 1
Step 6: If the Shop name is ""Big Bazaar"" and Customer name is ""Suresh"" then set B equal to 1
Step 7: If the Shop name is ""Sun General"" and Customer name is ""Suresh"" then set C equal to 1
Step 8: Move the current card to another pile called Pile 2 and repeat from Step 3
Step 9: Update the value of X as X = A + B + C</pre><ul><li>a) Number of distinct stores Suresh has visited among the three listed</li><li>b) Total number of bills in the dataset belonging to Suresh</li><li>c) A boolean flag indicating if Suresh visited any store</li><li>d) The total amount Suresh spent across all stores</li></ul>";"Correct: a)";"<b>Explanation:</b> The variables A, B, and C act as flags. They start at 0 and are set to 1 only once if Suresh has a bill from the corresponding store. They are never incremented further. Therefore, summing them up (A+B+C) counts how many of these specific stores Suresh visited at least once. It does not count the total number of visits or the total spending.<br><b>Distractor Rationale:</b><ul><li>b) Incorrect. The variables are set to 1 on the first visit and never incremented, so this procedure doesn't count total bills.</li><li>c) Incorrect. X can be 0, 1, 2, or 3, so it's a count, not a simple boolean (true/false) flag.</li><li>d) Incorrect. The procedure does not access or sum the ""Total bill amount"" field.</li></ul>"
"The following procedure is executed using the ""Olympics"" dataset. At the end of the execution, X will be True if...<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: Maintain a variable X and initialize it to True
Step 3: If Pile 1 is empty then stop the iteration
Step 4: Read the top card in Pile 1
Step 5: If the Gender is ""F"" and Nationality is ""Korean"" then set X equal to False
Step 6: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) there exists at least one female player who is not from Korea</li><li>b) there exists at least one female player who is from Korea</li><li>c) all the female players are from countries other than Korea</li><li>d) all the female players are from Korea only</li></ul>";"Correct: c)";"<b>Explanation:</b> The variable X starts as True and is only changed to False if the procedure finds even a single card for a female Korean player. For X to remain True at the end, the condition in Step 5 must never be met. This means there are no cards where Gender is ""F"" and Nationality is ""Korean"" simultaneously. This is equivalent to saying all female players are from countries other than Korea.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. This condition could be true even if there is one Korean female, in which case X would be False.</li><li>b) Incorrect. If this is true, X will definitely be set to False.</li><li>d) Incorrect. If all female players are Korean, X would be set to False on the first card encountered.</li></ul>"
"The following procedure is executed using the ""Library"" dataset. It is intended to count the number of books by ""Shakespeare"" published by ""Morning Star"". Identify all the steps with mistakes. Select all that apply.<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: Maintain a variable count and initialize it to 1
Step 3: If Pile 1 is empty then stop the iteration
Step 4: Read the top card in Pile 1
Step 5: If Author == ""Shakespeare"" or Publisher == ""Morning Star"" then increment count
Step 6: Move the current card to another pile called Pile 2 and repeat from step 3</pre><ul><li>a) Step 2: Incorrect initialization of the variable count</li><li>b) Step 3: Incorrect termination condition</li><li>c) Step 5: Incorrect logical condition to update count</li><li>d) Step 6: Incorrect iteration instruction</li></ul>";"Correct: a), c)";"<b>Explanation:</b> There are two primary errors. First, a counter variable (Step 2) should always be initialized to 0, not 1, to avoid an off-by-one error. Second, the condition in Step 5 uses ""or"" instead of ""and"". This would incorrectly count books by Shakespeare from other publishers AND books from Morning Star by other authors, not just the books that satisfy both conditions.<br><b>Distractor Rationale:</b><ul><li>a) Correct. Initialization should be 0.</li><li>b) Incorrect. Step 3 is the standard and correct way to stop an iteration when a pile is exhausted.</li><li>c) Correct. The logical operator should be 'and' to meet the requirement.</li><li>d) Incorrect. Step 6 correctly moves the card and loops back to the start of the iteration.</li></ul>"
"Match the following field names with the most appropriate datatype.<br><pre>Field name                                  | Datatype
--------------------------------------------|-----------

Names of students in ""Scores"" dataset    | i. Integer

Gender of players in ""Olympics"" dataset | ii. Boolean

Page count of books in ""Library""       | iii. String

City of a student in ""Scores"" dataset    | iv. Character

Year in the ""Library"" dataset          | v. Float</pre><ul><li>a) 1-iii, 2-iv, 3-i, 4-iv, 5-v</li><li>b) 1-iii, 2-ii, 3-i, 4-iii, 5-v</li><li>c) 1-iii, 2-iv, 3-i, 4-iii, 5-i</li><li>d) 1-iv, 2-ii, 3-i, 4-iv, 5-i</li></ul>";"Correct: c)";"<b>Explanation:</b> Names and City are sequences of characters (String). Gender is a single character ('M' or 'F'). Page count and Year are whole numbers (Integer).<br><b>Distractor Rationale:</b><ul><li>a) Incorrectly assigns Character to City and Float to Year.</li><li>b) Incorrectly assigns Boolean to Gender and Float to Year.</li><li>d) Incorrectly assigns Character to Names and Boolean to Gender.</li></ul>"
"A procedure is intended to count the number of Indian players who have won a ""Gold"" medal from the ""Olympics"" dataset. The programmer has missed Step 3 and Step 5. Identify the correct statements to complete the procedure.<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: Maintain a variable count and initialize it to 0
Step 3: ...
Step 4: Read the top card in Pile 1
Step 5: ...
Step 6: Move the current card to another pile called Pile 2 and repeat from Step 3</pre><ul><li>a) Step 3: If Pile 1 is empty then stop the iteration; Step 5: If Nationality == ""Indian"" and Medal == ""Gold"" then increment count</li><li>b) Step 3: If Pile 1 is empty then stop the iteration; Step 5: If Nationality == ""Indian"" or Medal == ""Gold"" then increment count</li><li>c) Step 3: If Pile 2 is empty then stop the iteration; Step 5: If Nationality == ""Indian"" and Medal == ""Gold"" then increment count</li><li>d) Step 3: If Pile 1 is empty move to Pile 2; Step 5: If Nationality == ""Indian"" or Medal == ""Gold"" then increment count</li></ul>";"Correct: a)";"<b>Explanation:</b> Step 3 must be the termination condition for the loop, which is checking if the input pile (Pile 1) is empty. Step 5 must be the filtering condition. To count players who are BOTH Indian AND won Gold, the logical 'and' operator is required.<br><b>Distractor Rationale:</b><ul><li>b) Incorrect. The 'or' operator in Step 5 would also count non-Indian gold medalists and Indian non-gold medalists.</li><li>c) Incorrect. The termination condition in Step 3 should check Pile 1, not Pile 2.</li><li>d) Incorrect. The termination condition in Step 3 is nonsensical, and the 'or' operator in Step 5 is wrong.</li></ul>"
"Which of the following are fundamental concepts of Computational Thinking, as described in the lecture materials? Select all that apply.<ul><li>a) Decomposition</li><li>b) Data Compilation</li><li>c) Pattern Recognition</li><li>d) Abstraction</li><li>e) Hardware Configuration</li></ul>";"Correct: a), c), d)";"<b>Explanation:</b> The lectures introduce Computational Thinking as a systematic way to approach problems, resting on key pillars. These include Decomposition (breaking down problems), Pattern Recognition (finding similarities), and Abstraction (focusing on essential details while ignoring irrelevant ones). Algorithm design is the fourth pillar.<br><b>Distractor Rationale:</b><ul><li>a) Correct. This is a core pillar of CT.</li><li>b) Incorrect. Data compilation is a task, but not a fundamental pillar of the thinking process itself.</li><li>c) Correct. This is a core pillar of CT.</li><li>d) Correct. This is a core pillar of CT.</li><li>e) Incorrect. Hardware configuration is related to computer systems but is not a part of the problem-solving methodology of CT.</li></ul>"
"A procedure is designed to find the average 'Letter count' for all words that are categorized as 'Noun' and also end with a full stop. Which variables are necessary to accomplish this in a single iteration?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: ...Initialize Variables...
Step 3: If Pile 1 is empty then stop
Step 4: Read the top card in Pile 1
Step 5: If (Category is ""Noun"" AND Word ends with a full stop) then ...update variables...
Step 6: Move card to Pile 2 and repeat from Step 3
Step 7: Compute Average</pre>Select all that apply.<ul><li>a) A variable to sum the letter counts of the filtered nouns.</li><li>b) A variable to count the total number of words in the dataset.</li><li>c) A variable to count the number of filtered nouns that meet the criteria.</li><li>d) A variable to store the longest noun found.</li></ul>";"Correct: a), c)";"<b>Explanation:</b> To calculate an average, two quantities are required: a total sum and a total count of the items being averaged. The procedure filters for nouns ending in a full stop. Therefore, we need one variable to accumulate the 'Letter count' for these specific words (the sum) and another variable to count how many such words we have found (the count).<br><b>Distractor Rationale:</b><ul><li>a) Correct. This is required for the numerator of the average calculation.</li><li>b) Incorrect. The total number of all words is not needed for the average of a specific subset.</li><li>c) Correct. This is required for the denominator of the average calculation.</li><li>d) Incorrect. Finding the longest noun is a different task (finding a maximum) and is not needed for the average.</li></ul>"
"A programmer creates a flowchart. One of the symbols is a diamond shape. What is the primary purpose of this symbol in a flowchart?<ul><li>a) To indicate the start or end of the program.</li><li>b) To perform a calculation and update a variable.</li><li>c) To represent a point where the program's path can change based on a condition.</li><li>d) To show the direction of logical flow from one step to another.</li></ul>";"Correct: c)";"<b>Explanation:</b> The diamond symbol in a flowchart represents a decision point. It contains a condition that evaluates to true or false, and there are typically two exit paths from the diamond, one for each outcome. This allows the algorithm to perform different actions based on the data it is processing.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. The start/end of a program is indicated by a terminal symbol (oval or rounded rectangle).</li><li>b) Incorrect. Calculations and variable updates are shown in a process or activity box (a rectangle).</li><li>c) Correct. This is the definition of the decision symbol.</li><li>d) Incorrect. The direction of flow is indicated by arrows (flowlines).</li></ul>"
"Which of the following data elements would be best represented by a 'Boolean' data type? Select all that apply.<ul><li>a) The total number of students in a class.</li><li>b) A check to see if a student's Mathematics marks are greater than 90.</li><li>c) The name of a customer on a shopping bill.</li><li>d) A flag that is set to 'True' if a paragraph contains the word ""Monday"".</li></ul>";"Correct: b), d)";"<b>Explanation:</b> A Boolean data type can only hold two values: True or False. It is used to represent the outcome of a logical condition. A comparison (marks > 90) results in a True/False answer. A flag to indicate the presence or absence of something is also a perfect use case for a Boolean.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. The number of students is a count, which would be an Integer (or a 'Count' subtype).</li><li>b) Correct. The result of this comparison is either True or False.</li><li>c) Incorrect. A name is a sequence of characters, which is a String data type.</li><li>d) Correct. This flag would be either True (it contains the word) or False (it does not).</li></ul>"
"A procedure needs to calculate two separate values in one pass over the ""Scores"" dataset: the total count of male students, and the sum of 'Physics' marks for only female students. What is the minimal set of variables that must be initialized before the iteration begins?<br><pre>Step 1: Arrange all cards in a single pile called Pile 1
Step 2: ...Initialize Variables...
Step 3: If Pile 1 is empty then stop
Step 4: Read the top card in Pile 1
Step 5: If Gender is ""M"" then ...
Step 6: If Gender is ""F"" then ...
Step 7: Move card to Pile 2 and repeat from Step 3</pre><ul><li>a) One variable for male count, one for female count.</li><li>b) One variable for male count, one for the sum of female physics marks.</li><li>c) One variable for total student count, one for total physics marks.</li><li>d) One variable for male count, one for female physics sum, one for female count.</li></ul>";"Correct: b)";"<b>Explanation:</b> The problem requires two final outputs: a count of male students and a sum of physics marks for female students. Therefore, we need one variable to act as a counter for males (e.g., maleCount = 0) and a separate variable to act as an accumulator for female physics marks (e.g., femalePhysicsSum = 0). A count of female students is not required by the problem statement.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. This is missing the variable needed to sum the physics marks.</li><li>b) Correct. This is the minimal set of variables to track the two required outputs.</li><li>c) Incorrect. This calculates overall totals, not the gender-specific values required.</li><li>d) Incorrect. A variable for the female count is not needed to solve the stated problem, so this set is not minimal.</li></ul>"
"Consider an algorithm that iterates through the 'Words' dataset. It needs to count the number of verbs with more than 5 letters and also count the number of nouns with 5 letters or fewer. Which of the following procedural steps are both correct and necessary inside the loop? Select all that apply.<ul><li>a) If PartOfSpeech is ""Verb"" AND LetterCount > 5, increment verb_count.</li><li>b) If PartOfSpeech is ""Noun"" AND LetterCount <= 5, increment noun_count.</li><li>c) If PartOfSpeech is ""Verb"", increment verb_count.</li><li>d) If LetterCount > 5, increment a general 'long_word_count'.</li></ul>";"Correct: a), b)";"<b>Explanation:</b> This is a more complex filtering task requiring two separate counters and two compound conditions. The first condition correctly combines the type check ('Verb') and the length check ('> 5') with an AND operator. The second condition correctly combines its type check ('Noun') and length check ('<= 5') with an AND operator. Both are required to fulfill the problem statement.<br><b>Distractor Rationale:</b><ul><li>c) Incorrect. This would count all verbs, regardless of their length.</li><li>d) Incorrect. This is not one of the required outputs and mixes nouns and verbs together.</li></ul>"
"A flowchart for finding the sum of maths marks for only female students is being designed. After the 'Pick a card X' step, what is the correct sequence of decision (diamond) and process (rectangle) blocks?<ul><li>a) A single decision block: ""Is X a female AND has Math score > 0?""</li><li>b) A decision block ""Is X a female?"", and on the 'Yes' path, a process block ""Add Math score to Sum"".</li><li>c) A process block ""Add Math score to Sum"", followed by a decision block ""Was X a female?""</li><li>d) A decision block ""Is X a female?"", and on the 'No' path, a process block ""Add Math score to Sum"".</li></ul>";"Correct: b)";"<b>Explanation:</b> The correct logic is to first filter, then act. The algorithm must first check if the card belongs to a female. Only if that condition is true (the 'Yes' path from the diamond) should it perform the action of adding the score to the sum. The other options represent incorrect logical flows.<br><b>Distractor Rationale:</b><ul><li>a) Incorrect. The condition ""has Math score > 0"" is not part of the requirement and could exclude students with a score of 0.</li><li>c) Incorrect. This adds the score for every student and then checks the gender, which is backward and incorrect.</li><li>d) Incorrect. This would add the scores for male students, not female students.</li></ul>"